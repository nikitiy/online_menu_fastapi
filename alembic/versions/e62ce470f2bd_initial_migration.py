"""initial migration

Revision ID: e62ce470f2bd
Revises: 
Create Date: 2025-10-21 15:40:57.785457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e62ce470f2bd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], name=op.f('fk_categories_parent_id_categories'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    op.create_index(op.f('ix_categories_parent_id'), 'categories', ['parent_id'], unique=False)
    op.create_index('ix_categories_parent_id_slug', 'categories', ['parent_id', 'slug'], unique=False)
    op.create_index(op.f('ix_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_table('companies',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('subdomain', sa.String(length=63), nullable=False),
    sa.Column('type_of_establishment', postgresql.ENUM('RESTAURANT', 'CAFE', 'COFFEE_SHOP', 'BAR', 'OTHER', name='company_establishment_type'), nullable=False),
    sa.Column('cuisine_category', postgresql.ENUM('JAPANESE', 'RUSSIAN', 'OTHER', name='cuisine_category'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies'))
    )
    op.create_index(op.f('ix_companies_subdomain'), 'companies', ['subdomain'], unique=True)
    op.create_table('countries',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=3), nullable=False),
    sa.Column('code_alpha2', sa.String(length=2), nullable=False),
    sa.Column('phone_code', sa.String(length=10), nullable=True),
    sa.Column('currency_code', sa.String(length=3), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_countries'))
    )
    op.create_index(op.f('ix_countries_code'), 'countries', ['code'], unique=True)
    op.create_index(op.f('ix_countries_code_alpha2'), 'countries', ['code_alpha2'], unique=True)
    op.create_index(op.f('ix_countries_name'), 'countries', ['name'], unique=False)
    op.create_index(op.f('ix_countries_name_en'), 'countries', ['name_en'], unique=False)
    op.create_table('site_configuration',
    sa.Column('site_name', sa.String(length=255), nullable=False),
    sa.Column('maintenance_mode', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.CheckConstraint('id = 1', name=op.f('ck_site_configuration_ck_site_configuration_singleton')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_site_configuration'))
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_updated_at'), 'users', ['updated_at'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('company_members',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', postgresql.ENUM('OWNER', 'ADMIN', 'EDITOR', 'VIEWER', name='company_role'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_company_members_company_id_companies'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_company_members_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company_members')),
    sa.UniqueConstraint('company_id', 'user_id', name='uq_company_member_company_user')
    )
    op.create_index(op.f('ix_company_members_company_id'), 'company_members', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_members_created_at'), 'company_members', ['created_at'], unique=False)
    op.create_index(op.f('ix_company_members_updated_at'), 'company_members', ['updated_at'], unique=False)
    op.create_index(op.f('ix_company_members_user_id'), 'company_members', ['user_id'], unique=False)
    op.create_table('menu_items',
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('grams', sa.Integer(), nullable=False),
    sa.Column('kilocalories', sa.Integer(), nullable=True),
    sa.Column('proteins', sa.Integer(), nullable=True),
    sa.Column('fats', sa.Integer(), nullable=True),
    sa.Column('carbohydrated', sa.Integer(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=False),
    sa.Column('owner_company_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('(is_template = TRUE AND owner_company_id IS NULL) OR (is_template = FALSE AND owner_company_id IS NOT NULL)', name=op.f('ck_menu_items_ck_menu_item_template_owner_consistency')),
    sa.CheckConstraint('carbohydrated IS NULL OR carbohydrated > 0', name=op.f('ck_menu_items_ck_menu_item_carbohydrated_pos')),
    sa.CheckConstraint('fats IS NULL OR fats > 0', name=op.f('ck_menu_items_ck_menu_item_fats_pos')),
    sa.CheckConstraint('grams > 0', name=op.f('ck_menu_items_ck_menu_item_grams_pos')),
    sa.CheckConstraint('kilocalories IS NULL OR kilocalories > 0', name=op.f('ck_menu_items_ck_menu_item_kilocalories_pos')),
    sa.CheckConstraint('proteins IS NULL OR proteins > 0', name=op.f('ck_menu_items_ck_menu_item_proteins_pos')),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_menu_items_category_id_categories'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['owner_company_id'], ['companies.id'], name=op.f('fk_menu_items_owner_company_id_companies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_menu_items'))
    )
    op.create_index('ck_menu_item_category_slug', 'menu_items', ['category_id', 'slug'], unique=False)
    op.create_index(op.f('ix_menu_items_category_id'), 'menu_items', ['category_id'], unique=False)
    op.create_index(op.f('ix_menu_items_created_at'), 'menu_items', ['created_at'], unique=False)
    op.create_index(op.f('ix_menu_items_owner_company_id'), 'menu_items', ['owner_company_id'], unique=False)
    op.create_index(op.f('ix_menu_items_slug'), 'menu_items', ['slug'], unique=True)
    op.create_index(op.f('ix_menu_items_updated_at'), 'menu_items', ['updated_at'], unique=False)
    op.create_table('oauth_accounts',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('provider_user_id', sa.String(length=255), nullable=False),
    sa.Column('provider_username', sa.String(length=255), nullable=True),
    sa.Column('provider_email', sa.String(length=255), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_oauth_accounts_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_oauth_accounts'))
    )
    op.create_index(op.f('ix_oauth_accounts_created_at'), 'oauth_accounts', ['created_at'], unique=False)
    op.create_index(op.f('ix_oauth_accounts_updated_at'), 'oauth_accounts', ['updated_at'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_refresh_tokens_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refresh_tokens')),
    sa.UniqueConstraint('token', name=op.f('uq_refresh_tokens_token'))
    )
    op.create_index(op.f('ix_refresh_tokens_created_at'), 'refresh_tokens', ['created_at'], unique=False)
    op.create_index(op.f('ix_refresh_tokens_updated_at'), 'refresh_tokens', ['updated_at'], unique=False)
    op.create_table('regions',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name=op.f('fk_regions_country_id_countries'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_regions'))
    )
    op.create_index(op.f('ix_regions_code'), 'regions', ['code'], unique=False)
    op.create_index(op.f('ix_regions_country_id'), 'regions', ['country_id'], unique=False)
    op.create_index(op.f('ix_regions_name'), 'regions', ['name'], unique=False)
    op.create_index(op.f('ix_regions_name_en'), 'regions', ['name_en'], unique=False)
    op.create_table('site',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_site_company_id_companies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_site'))
    )
    op.create_index(op.f('ix_site_company_id'), 'site', ['company_id'], unique=False)
    op.create_table('cities',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name=op.f('fk_cities_country_id_countries'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], name=op.f('fk_cities_region_id_regions'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cities'))
    )
    op.create_index(op.f('ix_cities_country_id'), 'cities', ['country_id'], unique=False)
    op.create_index(op.f('ix_cities_latitude'), 'cities', ['latitude'], unique=False)
    op.create_index(op.f('ix_cities_longitude'), 'cities', ['longitude'], unique=False)
    op.create_index(op.f('ix_cities_name'), 'cities', ['name'], unique=False)
    op.create_index(op.f('ix_cities_name_en'), 'cities', ['name_en'], unique=False)
    op.create_index(op.f('ix_cities_region_id'), 'cities', ['region_id'], unique=False)
    op.create_table('menu_images',
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('alt_text', sa.Text(), nullable=True),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], name=op.f('fk_menu_images_menu_item_id_menu_items'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_menu_images'))
    )
    op.create_index(op.f('ix_menu_images_created_at'), 'menu_images', ['created_at'], unique=False)
    op.create_index(op.f('ix_menu_images_menu_item_id'), 'menu_images', ['menu_item_id'], unique=False)
    op.create_index(op.f('ix_menu_images_updated_at'), 'menu_images', ['updated_at'], unique=False)
    op.create_table('streets',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('street_type', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name=op.f('fk_streets_city_id_cities'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_streets'))
    )
    op.create_index(op.f('ix_streets_city_id'), 'streets', ['city_id'], unique=False)
    op.create_index(op.f('ix_streets_latitude'), 'streets', ['latitude'], unique=False)
    op.create_index(op.f('ix_streets_longitude'), 'streets', ['longitude'], unique=False)
    op.create_index(op.f('ix_streets_name'), 'streets', ['name'], unique=False)
    op.create_index(op.f('ix_streets_name_en'), 'streets', ['name_en'], unique=False)
    op.create_table('addresses',
    sa.Column('house_number', sa.String(length=20), nullable=True),
    sa.Column('building', sa.String(length=20), nullable=True),
    sa.Column('apartment', sa.String(length=20), nullable=True),
    sa.Column('entrance', sa.String(length=20), nullable=True),
    sa.Column('floor', sa.Integer(), nullable=True),
    sa.Column('street_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('geocoder_provider', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['street_id'], ['streets.id'], name=op.f('fk_addresses_street_id_streets'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_addresses'))
    )
    op.create_index(op.f('ix_addresses_external_id'), 'addresses', ['external_id'], unique=False)
    op.create_index(op.f('ix_addresses_latitude'), 'addresses', ['latitude'], unique=False)
    op.create_index(op.f('ix_addresses_longitude'), 'addresses', ['longitude'], unique=False)
    op.create_index(op.f('ix_addresses_postal_code'), 'addresses', ['postal_code'], unique=False)
    op.create_index(op.f('ix_addresses_street_id'), 'addresses', ['street_id'], unique=False)
    op.create_table('company_branches',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], name=op.f('fk_company_branches_address_id_addresses'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_company_branches_company_id_companies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company_branches'))
    )
    op.create_index(op.f('ix_company_branches_address_id'), 'company_branches', ['address_id'], unique=False)
    op.create_index(op.f('ix_company_branches_company_id'), 'company_branches', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_branches_external_id'), 'company_branches', ['external_id'], unique=False)
    op.create_index(op.f('ix_company_branches_latitude'), 'company_branches', ['latitude'], unique=False)
    op.create_index(op.f('ix_company_branches_longitude'), 'company_branches', ['longitude'], unique=False)
    op.create_index(op.f('ix_company_branches_name'), 'company_branches', ['name'], unique=False)
    op.create_table('geocoding_results',
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('formatted_address', sa.Text(), nullable=True),
    sa.Column('country', sa.String(length=255), nullable=True),
    sa.Column('region', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=255), nullable=True),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('house_number', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('place_id', sa.String(length=255), nullable=True),
    sa.Column('place_type', sa.String(length=100), nullable=True),
    sa.Column('accuracy', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('raw_response', sa.Text(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], name=op.f('fk_geocoding_results_address_id_addresses'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_geocoding_results'))
    )
    op.create_index(op.f('ix_geocoding_results_address_id'), 'geocoding_results', ['address_id'], unique=False)
    op.create_index(op.f('ix_geocoding_results_external_id'), 'geocoding_results', ['external_id'], unique=False)
    op.create_index(op.f('ix_geocoding_results_latitude'), 'geocoding_results', ['latitude'], unique=False)
    op.create_index(op.f('ix_geocoding_results_longitude'), 'geocoding_results', ['longitude'], unique=False)
    op.create_index(op.f('ix_geocoding_results_place_id'), 'geocoding_results', ['place_id'], unique=False)
    op.create_index(op.f('ix_geocoding_results_provider'), 'geocoding_results', ['provider'], unique=False)
    op.create_index(op.f('ix_geocoding_results_query'), 'geocoding_results', ['query'], unique=False)
    op.create_table('company_branches_menu',
    sa.Column('company_branch_id', sa.Integer(), nullable=False),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['company_branch_id'], ['company_branches.id'], name=op.f('fk_company_branches_menu_company_branch_id_company_branches'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], name=op.f('fk_company_branches_menu_menu_item_id_menu_items'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company_branches_menu'))
    )
    op.create_index(op.f('ix_company_branches_menu_company_branch_id'), 'company_branches_menu', ['company_branch_id'], unique=False)
    op.create_index(op.f('ix_company_branches_menu_menu_item_id'), 'company_branches_menu', ['menu_item_id'], unique=False)
    op.create_table('qr_codes',
    sa.Column('company_branch_id', sa.Integer(), nullable=False),
    sa.Column('qr_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('url_hash', sa.CHAR(length=64), nullable=False),
    sa.Column('scan_count', sa.Integer(), nullable=False),
    sa.Column('last_scanned', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.CheckConstraint('scan_count >= 0', name=op.f('ck_qr_codes_ck_qr_codes_scan_count_nonneg')),
    sa.ForeignKeyConstraint(['company_branch_id'], ['company_branches.id'], name=op.f('fk_qr_codes_company_branch_id_company_branches'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_qr_codes')),
    sa.UniqueConstraint('url_hash', name='uq_qr_codes_url_hash')
    )
    op.create_index(op.f('ix_qr_codes_company_branch_id'), 'qr_codes', ['company_branch_id'], unique=False)
    op.create_index(op.f('ix_qr_codes_url_hash'), 'qr_codes', ['url_hash'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_qr_codes_url_hash'), table_name='qr_codes')
    op.drop_index(op.f('ix_qr_codes_company_branch_id'), table_name='qr_codes')
    op.drop_table('qr_codes')
    op.drop_index(op.f('ix_company_branches_menu_menu_item_id'), table_name='company_branches_menu')
    op.drop_index(op.f('ix_company_branches_menu_company_branch_id'), table_name='company_branches_menu')
    op.drop_table('company_branches_menu')
    op.drop_index(op.f('ix_geocoding_results_query'), table_name='geocoding_results')
    op.drop_index(op.f('ix_geocoding_results_provider'), table_name='geocoding_results')
    op.drop_index(op.f('ix_geocoding_results_place_id'), table_name='geocoding_results')
    op.drop_index(op.f('ix_geocoding_results_longitude'), table_name='geocoding_results')
    op.drop_index(op.f('ix_geocoding_results_latitude'), table_name='geocoding_results')
    op.drop_index(op.f('ix_geocoding_results_external_id'), table_name='geocoding_results')
    op.drop_index(op.f('ix_geocoding_results_address_id'), table_name='geocoding_results')
    op.drop_table('geocoding_results')
    op.drop_index(op.f('ix_company_branches_name'), table_name='company_branches')
    op.drop_index(op.f('ix_company_branches_longitude'), table_name='company_branches')
    op.drop_index(op.f('ix_company_branches_latitude'), table_name='company_branches')
    op.drop_index(op.f('ix_company_branches_external_id'), table_name='company_branches')
    op.drop_index(op.f('ix_company_branches_company_id'), table_name='company_branches')
    op.drop_index(op.f('ix_company_branches_address_id'), table_name='company_branches')
    op.drop_table('company_branches')
    op.drop_index(op.f('ix_addresses_street_id'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_postal_code'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_longitude'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_latitude'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_external_id'), table_name='addresses')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_streets_name_en'), table_name='streets')
    op.drop_index(op.f('ix_streets_name'), table_name='streets')
    op.drop_index(op.f('ix_streets_longitude'), table_name='streets')
    op.drop_index(op.f('ix_streets_latitude'), table_name='streets')
    op.drop_index(op.f('ix_streets_city_id'), table_name='streets')
    op.drop_table('streets')
    op.drop_index(op.f('ix_menu_images_updated_at'), table_name='menu_images')
    op.drop_index(op.f('ix_menu_images_menu_item_id'), table_name='menu_images')
    op.drop_index(op.f('ix_menu_images_created_at'), table_name='menu_images')
    op.drop_table('menu_images')
    op.drop_index(op.f('ix_cities_region_id'), table_name='cities')
    op.drop_index(op.f('ix_cities_name_en'), table_name='cities')
    op.drop_index(op.f('ix_cities_name'), table_name='cities')
    op.drop_index(op.f('ix_cities_longitude'), table_name='cities')
    op.drop_index(op.f('ix_cities_latitude'), table_name='cities')
    op.drop_index(op.f('ix_cities_country_id'), table_name='cities')
    op.drop_table('cities')
    op.drop_index(op.f('ix_site_company_id'), table_name='site')
    op.drop_table('site')
    op.drop_index(op.f('ix_regions_name_en'), table_name='regions')
    op.drop_index(op.f('ix_regions_name'), table_name='regions')
    op.drop_index(op.f('ix_regions_country_id'), table_name='regions')
    op.drop_index(op.f('ix_regions_code'), table_name='regions')
    op.drop_table('regions')
    op.drop_index(op.f('ix_refresh_tokens_updated_at'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_created_at'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_oauth_accounts_updated_at'), table_name='oauth_accounts')
    op.drop_index(op.f('ix_oauth_accounts_created_at'), table_name='oauth_accounts')
    op.drop_table('oauth_accounts')
    op.drop_index(op.f('ix_menu_items_updated_at'), table_name='menu_items')
    op.drop_index(op.f('ix_menu_items_slug'), table_name='menu_items')
    op.drop_index(op.f('ix_menu_items_owner_company_id'), table_name='menu_items')
    op.drop_index(op.f('ix_menu_items_created_at'), table_name='menu_items')
    op.drop_index(op.f('ix_menu_items_category_id'), table_name='menu_items')
    op.drop_index('ck_menu_item_category_slug', table_name='menu_items')
    op.drop_table('menu_items')
    op.drop_index(op.f('ix_company_members_user_id'), table_name='company_members')
    op.drop_index(op.f('ix_company_members_updated_at'), table_name='company_members')
    op.drop_index(op.f('ix_company_members_created_at'), table_name='company_members')
    op.drop_index(op.f('ix_company_members_company_id'), table_name='company_members')
    op.drop_table('company_members')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_updated_at'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_table('site_configuration')
    op.drop_index(op.f('ix_countries_name_en'), table_name='countries')
    op.drop_index(op.f('ix_countries_name'), table_name='countries')
    op.drop_index(op.f('ix_countries_code_alpha2'), table_name='countries')
    op.drop_index(op.f('ix_countries_code'), table_name='countries')
    op.drop_table('countries')
    op.drop_index(op.f('ix_companies_subdomain'), table_name='companies')
    op.drop_table('companies')
    op.drop_index(op.f('ix_categories_slug'), table_name='categories')
    op.drop_index('ix_categories_parent_id_slug', table_name='categories')
    op.drop_index(op.f('ix_categories_parent_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
